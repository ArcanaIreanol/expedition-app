// These are styles for the Expedition App.
// TODO: Update this to match the new card style

// ===============================================
// Font setup
// ===============================================

@font-face {
  font-family: 'CinzelBold';
  font-style: normal;
  font-weight: 700;
  src: local('Cinzel-Bold'), url(fonts/Cinzel-Bold.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
}

@font-face {
  font-family: 'MinionPro';
  src: url("fonts/Minion Pro Regular.ttf") format('truetype');
}

// ===============================================
// Transitional animation classes
// ===============================================

.NEXT-enter {
  transform: translate(100%);
}
.NEXT-enter.NEXT-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.NEXT-leave {
  position:absolute;
  transform: translate(0%);
}
.NEXT-leave.NEXT-leave-active {
  transform: translate(-100%);
  transition: transform 300ms ease-in-out;
}

.PREV-enter {
  transform: translate(-100%);
}
.PREV-enter.PREV-enter-active {
  transform: translate(0%);
  transition: transform 300ms ease-in-out;
}
.PREV-leave {
  position:absolute;
  transform: translate(0%);
}
.PREV-leave.PREV-leave-active {
  transform: translate(100%);
  transition: transform 300ms ease-in-out;
}

// ===============================================
// Constants
// ===============================================

$abswidthmax: 500px;
$absheightmax: 900px;

$widthmap: (
  huge: 12vw,
  large: 6vw,
  icon: 5vw,
  base: 2vw,
  small: 1vw,
  tiny: 0.5vw,
);

$heightmap: (
  watermark: 36vh,
  appbar: 48px,
  huge: 12vh,
  large: 6vh,
  base: 2vh,
  small: 1vh,
  tiny: 0.5vh,
);

$fontsizemap: (
  interactive: 5.5vw,
  flavor: 4.7vw,
  title: 6.2vw,
  timervalue: 24vw,
);

@function fontsize($key) {
  @if map-has-key($fontsizemap, $key) {
    @return map-get($fontsizemap, $key);
  }

  @warn "Unknown `#{$key}` in $fontsizemap.";
  @return null;
}

@function width($key) {
  @if map-has-key($widthmap, $key) {
    @return map-get($widthmap, $key);
  }

  @warn "Unknown `#{$key}` in $widthmap.";
  @return null;
}


@function height($key) {
  @if map-has-key($heightmap, $key) {
    @return map-get($heightmap, $key);
  }

  @warn "Unknown `#{$key}` in $heightmap.";
  @return null;
}

$headerfont: CinzelBold, serif;

$font_color_primary: #000000;
$font_color_faded: #777777;
$font_color_dark_primary: #FFFFFF;

$border_primary: 0.02in solid #000;
$border_dark_primary: 0.02in solid #999;
$border_accent: 0.02in solid #333;
$border_faded: 0.02in solid #777;

$bg_primary: #eeeeee;
$bg_inactive: #222222;
$bg_titlebar: rgba(255, 255, 235, 0.65);
$bg_accent: rgb(220, 220, 220);
$bg_interactive: rgba(245, 235, 205, 0.7);
$bg_active: rgba(255, 255, 255, 0.9);
$bg_dark_primary: rgb(20, 20, 20);
$bg_dark_titlebar: rgba(110, 110, 110, 0.6);
$bg_dark_accent: rgb(60, 60, 60);
$bg_dark_interactive: rgba(35, 35, 35, 0.5);
$bg_dark_active: rgba(30, 30, 30, 1.0);
$bg_surge_primary: #CC0000;

// ===============================================
// Base/General Styles
// ===============================================

body {
  background-color: $bg_inactive;
  overflow:hidden;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: MinionPro;
}

@mixin styling() {

  .base_card {
    height: 100%;
    display: flex;
    flex-direction: column;
    background-color: $bg_primary;
    background-image: url(/images/papyrus-tiled.jpg);
    background-size: 100% auto;
    background-repeat: repeat;
    color: $font_color_primary;
    overflow-y: scroll;
    &.dark {
      background-color: black;
      background-image: url(/images/encounter-tiled.jpg);
      color: $font_color_dark_primary;
      .title_container svg {
        color: $font_color_dark_primary !important;
      }
      .scrollbox_top {
        display: none;
      }
      .title_container {
        background-color: $bg_dark_titlebar;
      }
      .base_button > button, .base_checkbox button, .base_picker {
        background-color: $bg_dark_interactive !important;
        svg {
          color: white !important;
        }
      }
      .base_button > button {
        border: $border_dark_primary !important;
      }
    }
    .child_wrapper {
      margin: width(large);
      margin-top: width(small);
      margin-bottom: 9vw;
      position: relative;
    }
    .article {
      position: relative;
      padding: width(base);
      font-size: fontsize(flavor);
      .scrollbox_top {
        margin-top: height(tiny);
        margin-bottom: -(height(base));
        opacity: 0.3;
      }
      .scrollbox {
        position: relative;
        display: flex;
        flex-direction: column;
        width: 100%;
        #bgimg {
          position: absolute;
          height: height(watermark);
          width: height(watermark);
          right: 0;
          top: height(huge);
          margin-right: -10%;
          margin-top: 4vh;
          opacity: 0.2;
        }
        overflow-x: hidden;
      }
    }
    .title_container {
      position: relative;
      background-color: $bg_titlebar;
      padding: 0;
      line-height: height(appbar);
      height: height(appbar);
      > button {
        float: left;
      }
      .menu {
        float: right;
        padding: 0;
        font-size: fontsize(interactive);
      }
      .title {
        font-family: $headerfont;
        font-size: fontsize(title);
        display: inline-block;
        text-align: center;
        position: absolute;
        top: 0;
        left: height(appbar);
        right: height(appbar);
      }
    }
  }

  .inline_icon {
    width: width(icon);
    margin-bottom: -(width(tiny));
  }

  .base_button {
    > button {
      display: block !important;
      height: auto !important;
      width: 100% !important;
      font-size: fontsize(interactive) !important;
      padding: width(base) !important;
      padding-top: height(base) !important;
      padding-bottom: height(base) !important;
      margin: 0 !important;
      margin-top: height(base) !important;
      border: $border_accent !important;
      background-color: $bg_interactive !important;
      text-align: left !important;
      text-transform: none !important;
      text-decoration: none !important;
      color: inherit !important;
      line-height: 1.2 !important;
      > div {
        display: block !important;
      }
      &:disabled {
        border: $border_faded !important;
        color: $font_color_faded !important;
      }
    }
  }

  .base_checkbox {
    button {
      height: auto !important;
      display: block !important;
      font-size: fontsize(interactive) !important;
      padding: width(base) !important;
      padding-top: height(base) !important;
      padding-bottom: height(base) !important;
      margin: 0 !important;
      margin-top: height(base) !important;
      border: $border_accent !important;
      background-color: $bg_interactive !important;
      text-align: center !important;
      text-transform: none !important;
      text-decoration: none !important;
      color: inherit !important;
      width: 100% !important;
    }
    .label {
      font-size: fontsize(interactive);
      font-family: $headerfont;
    }
    .icon {
      display: inline-block;
      top: height(tiny);
      margin-left: height(tiny);
      position: relative;
    }
    .subtext {
      font-size: fontsize(flavor);
      line-height: 1.2;
    }
  }

  .base_indicator {
    display: flex;
    flex-direction: row;
    p > img {
      width: width(large);
      height: width(large);
      display: inline-block;
    }
    .text {
      font-style: italic;
      padding-left: width(base);
      padding-right: width(large);
    }
  }

  .base_main {
    position: absolute;
    width: 100%;
    height: 100%;
    max-width: $abswidthmax;
    max-height: $absheightmax;
  }

  .base_multi_touch_trigger {
    position: absolute;
  }

  .base_picker {
    height: auto;
    display: block;
    font-size: fontsize(interactive);
    padding: width(base);
    padding-top: height(base);
    padding-bottom: height(base);
    margin: 0;
    margin-top: height(base);
    border: $border_accent;
    background-color: $bg_interactive;
    text-align: center;
    text-transform: none;
    text-decoration: none;
    color: inherit;
    .subtext {
      font-size: fontsize(flavor);
    }
    .value {
      flex: 10;
      margin-top: height(small);
      font-family: $headerfont;
    }
    .controls {
      display: flex;
      flex-direction: row;

      :first-child {
        float: left;
      }

      :last-child {
        float: right;
      }
    }
  }

  .base_timer_card {
    &.dark {
      color: white;
      background-color: black;
    }
    width: 100%;
    height: 100%;
    background-color: inherit;
    color: inherit;
    .value {
      font-size: fontsize(timervalue);
      font-family: $headerfont;
      text-align: center;
      position: absolute;
      width: 100%;
      top: 50%;
      margin-top: -(fontsize(timervalue))/2;
    }
    .surge_warning {
      text-align: center;
      position: absolute;
      width: 100%;
      top: 60%;
    }
  }

  // ===============================================
  // Card-specific styles
  // ===============================================

  .advanced_play {
    padding-left: width(base);

    .summary {
      display: flex;
      padding-left: width(base);
      flex: 3;
      line-height: 1.2em;
      margin: 0;
      font-size: fontsize(flavor);
    }
    .title {
      line-height: 1.2em;
      display: block;
      font-size: fontsize(interactive);
      margin-bottom: height(small);
      font-family: $headerfont;
      top: 0;
    }
  }

  .combat {
    &.center {
      text-align: center;
    }
    &.draw_enemies {
      span {
        display: 'inline-block';
        &:first-child {
          margin-right: width(base);
        }
      }
    }
  }

  .featured_quest {
    padding-left: width(base);
    .summary {
      display: flex;
      padding-left: width(base);
      flex: 3;
      line-height: 1.2em;
      margin: 0;
      font-size: fontsize(flavor);
    }
    .title {
      line-height: 1.2em;
      font-family: $headerfont;
      display: block;
      font-size: fontsize(interactive);
      margin-bottom: height(small);
      top: 0;
    }
  }

  .search {
    .result_title {
      margin: 0;
      font-size: fontsize(interactive);
    }
    .details {
      text-align: center;

      .author {
        font-style: italic;
      }
    }
  }

  .splash_screen {
    width: 100%;
    height: 100%;
    position: relative;
    background-image: url(/images/leather.jpg);
    background-size: cover;
    color: $font_color_dark_primary;

    .center {
      width: 90%;
      left: 50%;
      margin-left: -45%;
      position: absolute;
      display: flex;
      flex-direction: column;
      top: 50%;
      margin-top: -10%;
      height: 20%;
      font-size: fontsize(flavor);
      text-align: center;
    }
    .logo {
      position: absolute;
      top: height(small);
      left: height(small);
      right: height(small);
      img {
        width: 100%;
      }
    }
    .no_multi_button {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: height(small);
      margin: auto;
      text-align: center;
      border: $border_dark_primary;
      cursor: pointer;
      background: $bg_inactive;
      opacity: 0.7;
    }
  }
}

@include styling();

// ===============================================
// Apply scaling or fixed styling if we're on
// a desktop. Center and border the fixed result.
// ===============================================

$abs_scale_vw: $abswidthmax / 100vw;
$abs_scale_vh: $absheightmax / 100vh;

$widthmap: (
  huge: 12vw * $abs_scale_vw,
  large: 6vw * $abs_scale_vw,
  icon: 5vw * $abs_scale_vw,
  base: 2vw * $abs_scale_vw,
  small: 1vw * $abs_scale_vw,
  tiny: 0.5vw * $abs_scale_vw,
);

$heightmap: (
  watermark: 36vh * $abs_scale_vh,
  appbar: 48px,
  huge: 12vh * $abs_scale_vh,
  large: 6vh * $abs_scale_vh,
  base: 2vh * $abs_scale_vh,
  small: 1vh * $abs_scale_vh,
  tiny: 0.5vh * $abs_scale_vh,
);

$fontsizemap: (
  interactive: 5.5vw * $abs_scale_vw,
  flavor: 4.7vw * $abs_scale_vw,
  title: 6.2vw * $abs_scale_vw,
  timervalue: 24vw * $abs_scale_vw,
);

@media screen and (min-width: $abswidthmax) , screen and (min-height: $absheightmax) {
  @include styling();

  .app_container {
    border: width(base) darken($bg_primary, 50%) solid;
    display: block;
    overflow: hidden;
    position: absolute;
    width: $abswidthmax;
    height: $absheightmax;
    left: 50%;
    top: 50%;
    margin-left: - $abswidthmax / 2;
    margin-top: - $absheightmax / 2;
    border-radius: width(base);
  }
}
